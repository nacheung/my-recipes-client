{"ast":null,"code":"var _jsxFileName = \"/Users/nicolecheung/my-recipes/src/App.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport ScraperPage from \"./pages/scraper/scraperPage\";\nimport LoginPage from \"./pages/login/loginPage\";\nimport SavedRecipesPage from \"./pages/savedRecipes/savedRecipesPage\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App({\n  username\n}) {\n  // const [title, setTitle] = useState(\"\");\n  // const [ingredients, setIngredients] = useState(\"\");\n  // const [instructions, setInstructions] = useState(\"\");\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [usernameReg, setUernameReg] = useState(\"\");\n  // const [passwordReg, setPasswordReg] = useState (\"\");\n  // const [username, setUername] = useState(\"\");\n  // const [password, setPassword] = useState (\"\");\n  // const [url, setUrl] = useState(\"\");\n  // const [isSaved, setIsSaved] = useState(false);\n\n  // const [loginStatus, setLoginStatus] = useState(\"\");\n\n  // const onNewUrlInput = (url) => {\n  //   setUrl(url);\n  //   setIsSaved(false);\n  //   fetch(`http://localhost:8000/message?url=${url}`)\n  //   .then((res) => res.json())\n  //   .then((data) => {\n  //     setTitle(data.title);\n  //     setIngredients(data.ingredients);\n  //     setInstructions(data.instructions);\n  //   });\n  // }\n\n  // const register = () => {\n  //   Axios.post(\"http://localhost:3001/register\", {\n  //     username: usernameReg,\n  //     password: passwordReg,\n  //    }).then((response) => {\n  //       console.log(response);\n  //    });\n  //  };\n\n  //  const login = () => {\n  //   Axios.post(\"http://localhost:3001/login\", {\n  //      username: username,\n  //      password: password,\n  //   }).then((response) => {\n  //      if (!response.data.message) {\n  //       setLoginStatus(\"logged in\");\n  //       setIsLoggedIn(true);\n  //      } else {\n  //       setLoginStatus (response.data.message);\n  //      }\n  //   });\n  //   };\n\n  // const saveRecipe = () => {\n  //   console.log(\"Hello\");\n  //   Axios.post(\"http://localhost:3001/save\", {\n  //     username: username,\n  //     url: url,\n  //     title: title,\n  //     ingredients: ingredients,\n  //     instructions: instructions, \n  //   }).then((response) => {\n  //     if (!response.data.err) {\n  //       setIsSaved(true);\n  //     }\n  //  });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: username ? /*#__PURE__*/_jsxDEV(ScraperPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/index\",\n        element: /*#__PURE__*/_jsxDEV(SavedRecipesPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n\n  //   return (\n\n  //     <div className=\"App\" style={{whiteSpace: \"pre-line\"}}>\n  //       {!isLoggedIn && (\n  //         <div className=\"registration-and-login\">\n  //           <div className=\"registration\">\n  //             <h1>Registration</h1>\n  //             <label>Username</label>\n  //             <input \n  //               type=\"text\"            \n  //               onChange={(e) => {\n  //                 setUernameReg(e.target.value);\n  //               }}/>\n  //             <br/>\n  //             <label>password</label>\n  //             <input \n  //               type=\"text\" \n  //               onChange={(e) =>{\n  //                  setPasswordReg(e.target.value);\n  //               }}\n  //             /> \n  //             <br />\n  //             <button onClick={register}> Register</button>\n  //           </div>\n  //           <div className=\"login\">\n  //             <h1>Login</h1>\n  //             <input \n  //               type=\"text\" \n  //               placeholder=\"Username…\" \n  //               onChange = { (e) => {\n  //                 setUername (e.target.value);\n  //              }}\n  //             /> \n  //             <br/>\n  //             <input \n  //               type=\"password\" \n  //               placeholder=\"Password…\" \n  //               onChange = { (e) => {\n  //                 setPassword (e.target.value);\n  //              }}\n  //             />\n  //             <button onClick={login}>Login</button>\n  //             <h1> {loginStatus}</h1>\n  //           </div>\n  //         </div>\n  //       )}\n\n  //       <div className=\"recipe-scraper\">\n  //         {isLoggedIn && (\n  //           <div>\n  //             <button onClick={saveRecipe}>{isSaved ? \"Saved!\" : \"Save Recipe\"}</button>\n  //             <button onClick={saveRecipe}>My Recipes</button>\n  //           </div>\n  //         )}\n  //         <h1>Enter a website URL below to extract the recipe</h1>\n  //         <input type=\"text\" placeholder=\"URL\" onChange={e => onNewUrlInput(e.target.value)} />\n  //         <h1>{title}</h1>\n  //         <h3>Ingredients:</h3>\n  //         {ingredients}\n  //         <h3>Instructions:</h3>\n  //         {instructions}\n  //       </div>\n  //     </div>\n  //   );\n}\n_c = App;\nconst mapStateToProps = state => ({\n  username: state.username\n});\nexport default connect(mapStateToProps)(App);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","BrowserRouter","Routes","Route","ScraperPage","LoginPage","SavedRecipesPage","Axios","connect","jsxDEV","_jsxDEV","App","username","children","index","element","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/nicolecheung/my-recipes/src/App.js"],"sourcesContent":["import React, { useState} from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport ScraperPage from \"./pages/scraper/scraperPage\";\nimport LoginPage from \"./pages/login/loginPage\";\nimport SavedRecipesPage from \"./pages/savedRecipes/savedRecipesPage\";\n\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport { connect } from \"react-redux\";\n\n\n\nfunction App({username}) {\n\n  // const [title, setTitle] = useState(\"\");\n  // const [ingredients, setIngredients] = useState(\"\");\n  // const [instructions, setInstructions] = useState(\"\");\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [usernameReg, setUernameReg] = useState(\"\");\n  // const [passwordReg, setPasswordReg] = useState (\"\");\n  // const [username, setUername] = useState(\"\");\n  // const [password, setPassword] = useState (\"\");\n  // const [url, setUrl] = useState(\"\");\n  // const [isSaved, setIsSaved] = useState(false);\n  \n  // const [loginStatus, setLoginStatus] = useState(\"\");\n\n  // const onNewUrlInput = (url) => {\n  //   setUrl(url);\n  //   setIsSaved(false);\n  //   fetch(`http://localhost:8000/message?url=${url}`)\n  //   .then((res) => res.json())\n  //   .then((data) => {\n  //     setTitle(data.title);\n  //     setIngredients(data.ingredients);\n  //     setInstructions(data.instructions);\n  //   });\n  // }\n\n  // const register = () => {\n  //   Axios.post(\"http://localhost:3001/register\", {\n  //     username: usernameReg,\n  //     password: passwordReg,\n  //    }).then((response) => {\n  //       console.log(response);\n  //    });\n  //  };\n\n  //  const login = () => {\n  //   Axios.post(\"http://localhost:3001/login\", {\n  //      username: username,\n  //      password: password,\n  //   }).then((response) => {\n  //      if (!response.data.message) {\n  //       setLoginStatus(\"logged in\");\n  //       setIsLoggedIn(true);\n  //      } else {\n  //       setLoginStatus (response.data.message);\n  //      }\n  //   });\n  //   };\n\n  // const saveRecipe = () => {\n  //   console.log(\"Hello\");\n  //   Axios.post(\"http://localhost:3001/save\", {\n  //     username: username,\n  //     url: url,\n  //     title: title,\n  //     ingredients: ingredients,\n  //     instructions: instructions, \n  //   }).then((response) => {\n  //     if (!response.data.err) {\n  //       setIsSaved(true);\n  //     }\n  //  });\n  // };\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route index element={username ? <ScraperPage /> : <LoginPage />} />\n        <Route path=\"/index\" element={<SavedRecipesPage />} />\n      </Routes>\n    </BrowserRouter>\n  );\n\n\n//   return (\n    \n//     <div className=\"App\" style={{whiteSpace: \"pre-line\"}}>\n//       {!isLoggedIn && (\n//         <div className=\"registration-and-login\">\n//           <div className=\"registration\">\n//             <h1>Registration</h1>\n//             <label>Username</label>\n//             <input \n//               type=\"text\"            \n//               onChange={(e) => {\n//                 setUernameReg(e.target.value);\n//               }}/>\n//             <br/>\n//             <label>password</label>\n//             <input \n//               type=\"text\" \n//               onChange={(e) =>{\n//                  setPasswordReg(e.target.value);\n//               }}\n//             /> \n//             <br />\n//             <button onClick={register}> Register</button>\n//           </div>\n//           <div className=\"login\">\n//             <h1>Login</h1>\n//             <input \n//               type=\"text\" \n//               placeholder=\"Username…\" \n//               onChange = { (e) => {\n//                 setUername (e.target.value);\n//              }}\n//             /> \n//             <br/>\n//             <input \n//               type=\"password\" \n//               placeholder=\"Password…\" \n//               onChange = { (e) => {\n//                 setPassword (e.target.value);\n//              }}\n//             />\n//             <button onClick={login}>Login</button>\n//             <h1> {loginStatus}</h1>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"recipe-scraper\">\n//         {isLoggedIn && (\n//           <div>\n//             <button onClick={saveRecipe}>{isSaved ? \"Saved!\" : \"Save Recipe\"}</button>\n//             <button onClick={saveRecipe}>My Recipes</button>\n//           </div>\n//         )}\n//         <h1>Enter a website URL below to extract the recipe</h1>\n//         <input type=\"text\" placeholder=\"URL\" onChange={e => onNewUrlInput(e.target.value)} />\n//         <h1>{title}</h1>\n//         <h3>Ingredients:</h3>\n//         {ingredients}\n//         <h3>Instructions:</h3>\n//         {instructions}\n//       </div>\n//     </div>\n//   );\n}\n\nconst mapStateToProps = (state) => ({\n  username: state.username\n});\n\nexport default connect(mapStateToProps)(App);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,gBAAgB,MAAM,uCAAuC;AAEpE,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItC,SAASC,GAAGA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAEvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEF,OAAA,CAACT,aAAa;IAAAY,QAAA,eACZH,OAAA,CAACR,MAAM;MAAAW,QAAA,gBACLH,OAAA,CAACP,KAAK;QAACW,KAAK;QAACC,OAAO,EAAEH,QAAQ,gBAAGF,OAAA,CAACN,WAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGT,OAAA,CAACL,SAAS;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpET,OAAA,CAACP,KAAK;QAACiB,IAAI,EAAC,QAAQ;QAACL,OAAO,eAAEL,OAAA,CAACJ,gBAAgB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;;EAIpB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;AAACE,EAAA,GA3IQV,GAAG;AA6IZ,MAAMW,eAAe,GAAIC,KAAK,KAAM;EAClCX,QAAQ,EAAEW,KAAK,CAACX;AAClB,CAAC,CAAC;AAEF,eAAeJ,OAAO,CAACc,eAAe,CAAC,CAACX,GAAG,CAAC;AAAC,IAAAU,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}