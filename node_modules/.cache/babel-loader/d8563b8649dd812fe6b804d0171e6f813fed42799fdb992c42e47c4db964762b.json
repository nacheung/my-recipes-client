{"ast":null,"code":"/**\n * Expose `render()`.`\n */\n\nexports = module.exports = render;\n\n/**\n * Expose `compile()`.\n */\n\nexports.compile = compile;\n\n/**\n * Render the given mustache `str` with `obj`.\n *\n * @param {String} str\n * @param {Object} obj\n * @return {String}\n * @api public\n */\n\nfunction render(str, obj) {\n  obj = obj || {};\n  var fn = compile(str);\n  return fn(obj);\n}\n\n/**\n * Compile the given `str` to a `Function`.\n *\n * @param {String} str\n * @return {Function}\n * @api public\n */\n\nfunction compile(str) {\n  var js = [];\n  var toks = parse(str);\n  var tok;\n  for (var i = 0; i < toks.length; ++i) {\n    tok = toks[i];\n    if (i % 2 == 0) {\n      js.push('\"' + tok.replace(/\"/g, '\\\\\"') + '\"');\n    } else {\n      switch (tok[0]) {\n        case '/':\n          tok = tok.slice(1);\n          js.push(' }) + ');\n          break;\n        case '^':\n          tok = tok.slice(1);\n          assertProperty(tok);\n          js.push(' + section(obj, \"' + tok + '\", true, function(obj){ return ');\n          break;\n        case '#':\n          tok = tok.slice(1);\n          assertProperty(tok);\n          js.push(' + section(obj, \"' + tok + '\", false, function(obj){ return ');\n          break;\n        case '!':\n          tok = tok.slice(1);\n          assertProperty(tok);\n          js.push(' + obj.' + tok + ' + ');\n          break;\n        default:\n          assertProperty(tok);\n          js.push(' + escape(obj.' + tok + ') + ');\n      }\n    }\n  }\n  js = '\\n' + indent(escape.toString()) + ';\\n\\n' + indent(section.toString()) + ';\\n\\n' + '  return ' + js.join('').replace(/\\n/g, '\\\\n');\n  return new Function('obj', js);\n}\n\n/**\n * Assert that `prop` is a valid property.\n *\n * @param {String} prop\n * @api private\n */\n\nfunction assertProperty(prop) {\n  if (!prop.match(/^[\\w.]+$/)) throw new Error('invalid property \"' + prop + '\"');\n}\n\n/**\n * Parse `str`.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nfunction parse(str) {\n  return str.split(/\\{\\{|\\}\\}/);\n}\n\n/**\n * Indent `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction indent(str) {\n  return str.replace(/^/gm, '  ');\n}\n\n/**\n * Section handler.\n *\n * @param {Object} context obj\n * @param {String} prop\n * @param {Function} thunk\n * @param {Boolean} negate\n * @api private\n */\n\nfunction section(obj, prop, negate, thunk) {\n  var val = obj[prop];\n  if (Array.isArray(val)) return val.map(thunk).join('');\n  if ('function' == typeof val) return val.call(obj, thunk(obj));\n  if (negate) val = !val;\n  if (val) return thunk(obj);\n  return '';\n}\n\n/**\n * Escape the given `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nfunction escape(html) {\n  return String(html).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}","map":{"version":3,"names":["exports","module","render","compile","str","obj","fn","js","toks","parse","tok","i","length","push","replace","slice","assertProperty","indent","escape","toString","section","join","Function","prop","match","Error","split","negate","thunk","val","Array","isArray","map","call","html","String"],"sources":["/Users/nicolecheung/my-recipes/node_modules/minstache/index.js"],"sourcesContent":["\n/**\n * Expose `render()`.`\n */\n\nexports = module.exports = render;\n\n/**\n * Expose `compile()`.\n */\n\nexports.compile = compile;\n\n/**\n * Render the given mustache `str` with `obj`.\n *\n * @param {String} str\n * @param {Object} obj\n * @return {String}\n * @api public\n */\n\nfunction render(str, obj) {\n  obj = obj || {};\n  var fn = compile(str);\n  return fn(obj);\n}\n\n/**\n * Compile the given `str` to a `Function`.\n *\n * @param {String} str\n * @return {Function}\n * @api public\n */\n\nfunction compile(str) {\n  var js = [];\n  var toks = parse(str);\n  var tok;\n\n  for (var i = 0; i < toks.length; ++i) {\n    tok = toks[i];\n    if (i % 2 == 0) {\n      js.push('\"' + tok.replace(/\"/g, '\\\\\"') + '\"');\n    } else {\n      switch (tok[0]) {\n        case '/':\n          tok = tok.slice(1);\n          js.push(' }) + ');\n          break;\n        case '^':\n          tok = tok.slice(1);\n          assertProperty(tok);\n          js.push(' + section(obj, \"' + tok + '\", true, function(obj){ return ');\n          break;\n        case '#':\n          tok = tok.slice(1);\n          assertProperty(tok);\n          js.push(' + section(obj, \"' + tok + '\", false, function(obj){ return ');\n          break;\n        case '!':\n          tok = tok.slice(1);\n          assertProperty(tok);\n          js.push(' + obj.' + tok + ' + ');\n          break;\n        default:\n          assertProperty(tok);\n          js.push(' + escape(obj.' + tok + ') + ');\n      }\n    }\n  }\n\n  js = '\\n'\n    + indent(escape.toString()) + ';\\n\\n'\n    + indent(section.toString()) + ';\\n\\n'\n    + '  return ' + js.join('').replace(/\\n/g, '\\\\n');\n\n  return new Function('obj', js);\n}\n\n/**\n * Assert that `prop` is a valid property.\n *\n * @param {String} prop\n * @api private\n */\n\nfunction assertProperty(prop) {\n  if (!prop.match(/^[\\w.]+$/)) throw new Error('invalid property \"' + prop + '\"');\n}\n\n/**\n * Parse `str`.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nfunction parse(str) {\n  return str.split(/\\{\\{|\\}\\}/);\n}\n\n/**\n * Indent `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction indent(str) {\n  return str.replace(/^/gm, '  ');\n}\n\n/**\n * Section handler.\n *\n * @param {Object} context obj\n * @param {String} prop\n * @param {Function} thunk\n * @param {Boolean} negate\n * @api private\n */\n\nfunction section(obj, prop, negate, thunk) {\n  var val = obj[prop];\n  if (Array.isArray(val)) return val.map(thunk).join('');\n  if ('function' == typeof val) return val.call(obj, thunk(obj));\n  if (negate) val = !val;\n  if (val) return thunk(obj);\n  return '';\n}\n\n/**\n * Escape the given `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nfunction escape(html) {\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}