{"ast":null,"code":"/**\n * Module Dependencies\n */\n\nvar minstache = require('minstache');\n\n/**\n * Run the `src` function on the client-side, capture\n * the response and logs, and send back via\n * ipc to electron's main process\n */\n\nvar execute = `\n(function javascript () {\n  var nightmare = window.__nightmare || window[''].nightmare;\n  try {\n    var fn = ({{!src}}), \n      response, \n      args = [];\n\n    {{#args}}args.push({{!argument}});{{/args}}\n\n    if(fn.length - 1 == args.length) {\n      args.push(((err, v) => {\n          if(err) return nightmare.reject(err);\n          nightmare.resolve(v);\n        }));\n      fn.apply(null, args);\n    } \n    else {\n      response = fn.apply(null, args);\n      if(response && response.then) {\n        response.then((v) => {\n          nightmare.resolve(v);\n        })\n        .catch((err) => {\n          nightmare.reject(err)\n        });\n      } else {\n        nightmare.resolve(response);\n      }\n    }\n  } catch (err) {\n    nightmare.reject(err);\n  }\n})()\n`;\n\n/**\n * Inject the `src` on the client-side, capture\n * the response and logs, and send back via\n * ipc to electron's main process\n */\n\nvar inject = `\n(function javascript () {\n  var nightmare = window.__nightmare || window[''].nightmare;\n  try {\n    var response = (function () { {{!src}} \\n})()\n    nightmare.resolve(response);\n  } catch (e) {\n    nightmare.reject(e);\n  }\n})()\n`;\n\n/**\n * Export the templates\n */\n\nexports.execute = minstache.compile(execute);\nexports.inject = minstache.compile(inject);","map":{"version":3,"names":["minstache","require","execute","inject","exports","compile"],"sources":["/Users/nicolecheung/my-recipes/node_modules/nightmare/lib/javascript.js"],"sourcesContent":["/**\n * Module Dependencies\n */\n\nvar minstache = require('minstache')\n\n/**\n * Run the `src` function on the client-side, capture\n * the response and logs, and send back via\n * ipc to electron's main process\n */\n\nvar execute = `\n(function javascript () {\n  var nightmare = window.__nightmare || window[''].nightmare;\n  try {\n    var fn = ({{!src}}), \n      response, \n      args = [];\n\n    {{#args}}args.push({{!argument}});{{/args}}\n\n    if(fn.length - 1 == args.length) {\n      args.push(((err, v) => {\n          if(err) return nightmare.reject(err);\n          nightmare.resolve(v);\n        }));\n      fn.apply(null, args);\n    } \n    else {\n      response = fn.apply(null, args);\n      if(response && response.then) {\n        response.then((v) => {\n          nightmare.resolve(v);\n        })\n        .catch((err) => {\n          nightmare.reject(err)\n        });\n      } else {\n        nightmare.resolve(response);\n      }\n    }\n  } catch (err) {\n    nightmare.reject(err);\n  }\n})()\n`\n\n/**\n * Inject the `src` on the client-side, capture\n * the response and logs, and send back via\n * ipc to electron's main process\n */\n\nvar inject = `\n(function javascript () {\n  var nightmare = window.__nightmare || window[''].nightmare;\n  try {\n    var response = (function () { {{!src}} \\n})()\n    nightmare.resolve(response);\n  } catch (e) {\n    nightmare.reject(e);\n  }\n})()\n`\n\n/**\n * Export the templates\n */\n\nexports.execute = minstache.compile(execute)\nexports.inject = minstache.compile(inject)\n"],"mappings":"AAAA;AACA;AACA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAEpC;AACA;AACA;AACA;AACA;;AAEA,IAAIC,OAAO,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEAC,OAAO,CAACF,OAAO,GAAGF,SAAS,CAACK,OAAO,CAACH,OAAO,CAAC;AAC5CE,OAAO,CAACD,MAAM,GAAGH,SAAS,CAACK,OAAO,CAACF,MAAM,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}